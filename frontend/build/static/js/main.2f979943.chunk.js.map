{"version":3,"sources":["components/helper/helper.js","components/loading/loading.js","components/login/login.js","components/navbar/navbar.js","components/auth/privateroute.js","components/grid/grid.js","components/prompts/confirmation.js","components/prompts/message.js","components/empleados/crud/buscar.js","components/empleados/crud/crear.js","components/empleados/crud/editar.js","components/empleados/index.js","components/router/router.js","App.js","reportWebVitals.js","index.js"],"names":["cookies","Cookies","calculaExtracionSesion","now","Date","getTime","getSession","isUndefined","get","renovarSesion","sesion","window","location","href","set","path","expires","request","services","token","axios","concat","host","APIHOST","headers","Authorization","data","post","put","delete","Loading","React","Component","constructor","props","super","this","state","loading","componentDidUpdate","prevProps","show","setState","render","createElement","Fragment","id","Spinner","animation","variant","Login","usuario","pass","iniciarSesion","then","response","alert","history","push","catch","err","console","log","Container","Row","Col","sm","xs","md","span","offset","lg","xl","Form","Group","Label","Control","onChange","e","target","value","type","Button","onClick","Menu","logout","remove","reload","Navbar","fixed","expand","bg","Brand","Toggle","aria-controls","Collapse","Nav","className","DropdownButton","title","Dropdown","Header","FontAwesomeIcon","icon","faUserCircle","Divider","Item","PrivateRoute","auth","componentWillMount","component","rest","Route","Object","assign","Redirect","to","pathname","from","SearchBar","Search","DataGrid","rows","showEditButton","existColumn","columns","gerEditButton","showDeleteButton","getDeleteButton","componentDidMount","getData","url","error","colText","col","find","column","text","formatter","cell","row","onClickEditButton","faEdit","onClickDeleteButton","faTrash","options","custom","totalSize","length","ToolkitProvider","keyField","search","PaginationProvider","pagination","paginationFactory","_ref","paginationProps","paginationTableProps","SizePerPageDropdownStandalone","searchProps","BootstrapTable","baseProps","PaginationListStandalone","ConfirmationPromps","componentWillReceiveProps","nextProps","Modal","centered","onHide","onCancel","closeButton","Title","Body","Footer","onConfirm","MessagePrompt","hideMessage","setTimeout","duration","onExited","isNull","dataField","hidden","EmmpleadosBuscar","idEmpleado","confirmation","message","bind","setIdEmpleado","_id","changeTab","eliminarEmpleado","msg","exito","reloadPage","onExitedMessage","style","marginTop","EmpleadosCrear","redirect","empleado","nombre","apellido_p","apellido_m","telefono","mail","direccion","setValue","index","guardarEmpleados","controlId","EmpleadosEditar","getIdEmpleado","getEmpleado","Empleados","currenTab","tab","fill","defaultActiveKey","onSelect","eventKey","Link","AppRouter","Router","Switch","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.2f979943.chunk.js","sourcesContent":["import { isUndefined } from \"util\";\r\nimport Cookies from \"universal-cookie\";\r\nimport axios from \"axios\";\r\n\r\nimport host from '../../app.json'\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport function calculaExtracionSesion() {\r\n    const now = new Date().getTime();\r\n    const newDate = now + 60 * 30 * 1000;\r\n    return new Date(newDate)\r\n}\r\n\r\nexport function getSession() {\r\n    return isUndefined(cookies.get('_s')) ? false : cookies.get('_s'); \r\n}\r\n\r\nfunction renovarSesion() {\r\n    const sesion = getSession();\r\n    if (!sesion) window.location.href = '/login';\r\n\r\n    cookies.set('_s', sesion, {\r\n        path: '/',\r\n        expires: calculaExtracionSesion(),\r\n    })\r\n    return sesion;\r\n}\r\n\r\nexport const request = {\r\n    get: function (services) {\r\n        let token = renovarSesion();\r\n        return axios.get(`${host.APIHOST}${services}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n    },\r\n    post: function (services, data){\r\n        let token = renovarSesion();\r\n        return axios.post(`${host.APIHOST}${services}`, data,{\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        });\r\n    },\r\n    put: function (services, data){\r\n        let token = renovarSesion();\r\n        return axios.put(`${host.APIHOST}${services}`, data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        });\r\n    },\r\n    delete: function (services){\r\n        let token = renovarSesion();\r\n        return axios.delete(`${host.APIHOST}${services}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            }\r\n        })\r\n    }\r\n};\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\nimport './loading.css'\r\n\r\nexport default class Loading extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            loading: false,\r\n         }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n    if (prevProps.show !== this.props.show) {\r\n      this.setState({ show: this.props.show });\r\n    }\r\n  }\r\n    \r\n    render() { \r\n        return ( \r\n            <>\r\n            {this.state.show ? ( \r\n            <div id='loading-backdrop'>\r\n                <Spinner animation='border' variant='primary'/>\r\n            </div>) : null}\r\n            </>\r\n         );\r\n    }\r\n}\r\n;","import React from 'react'\r\nimport axios from 'axios';\r\nimport './login.css'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap';\r\nimport host from '../../app.json'\r\nimport { isNull} from 'util'\r\nimport Cookies from 'universal-cookie';\r\nimport { calculaExtracionSesion } from '../helper/helper';\r\nimport Loading from '../loading/loading';\r\n\r\n\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            usuario: '',\r\n            pass: '',\r\n        }\r\n    }\r\n\r\n    iniciarSesion(){\r\n\r\n        this.setState({loading: true});\r\n\r\n        axios.post(`${host.APIHOST}/usuarios/login`, {\r\n            usuario: this.state.usuario,\r\n            pass: this.state.pass,\r\n        })\r\n        .then((response) => {\r\n\r\n            if(response.data.token == null){\r\n                alert('Usuario y contraseña inválidos')\r\n            } else {\r\n                cookies.set('_s', response.data.token, {\r\n                    path: '/',\r\n                    expires: calculaExtracionSesion()\r\n                })\r\n                this.props.history.push('/empleados');\r\n                \r\n            }\r\n            this.setState({loading: false});\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            this.setState({loading: false});\r\n        }) \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container id='login-container'>\r\n\r\n                <Loading show={this.state.loading}/>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <Row>\r\n                            <h2>Iniciar Sesión</h2>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col \r\n                                sm=\"12\"\r\n                                xs=\"12\"\r\n                                md={{span: 4, offset: 4}}\r\n                                lg={{span: 4, offset: 4}}\r\n                                xl={{span: 4, offset: 4}}>\r\n                                    \r\n                                <Form>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Usuario</Form.Label>\r\n                                        <Form.Control onChange={(e) => this.setState ({usuario: e.target.value})\r\n                                    }/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Contraseña</Form.Label>\r\n                                        <Form.Control type=\"password\" onChange={(e) => \r\n                                        this.setState({ pass: e.target.value})} />\r\n                                    </Form.Group>\r\n                                    <Button variant=\"primary\"\r\n                                    onClick={() => {\r\n                                        this.iniciarSesion();\r\n                                    }}>\r\n                                        Iniciar sesión\r\n                                    </Button>\r\n                                </Form>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport './navbar.css'\r\nimport { Container, Dropdown, DropdownButton, Nav, Navbar, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport default class Menu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    logout(){\r\n        cookies.remove('_s');\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Navbar fixed='top' id='navbar' expand=\"lg\" variant='dark' bg=\"primary\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"#home\">Gestor Empleados <span id='usuario-sub-branm'></span></Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"me-auto\">\r\n                            {/* <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                            <Nav.Link href=\"#link\">Link</Nav.Link> */}\r\n                        </Nav>\r\n                        <DropdownButton id=\"dropdown-basic-button\" title=\"Usuario\">\r\n                            <Dropdown.Header id='dropdown-header'>\r\n                                <Row>\r\n                                    <FontAwesomeIcon icon={faUserCircle}/>\r\n                                </Row>\r\n                                <Row>\r\n                                    #USUARIO#\r\n                                </Row>\r\n                            </Dropdown.Header>\r\n                            <Dropdown.Divider/>\r\n                            <Dropdown.Item onClick={() => this.logout()}>Cerrar sesión</Dropdown.Item>\r\n                            {/* <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n                            <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item> */}\r\n                        </DropdownButton>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\n;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { getSession } from '../helper/helper'\r\n\r\nconst checkAuth = () => {\r\n    return !getSession() ? false : true\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default class PrivateRoute extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            auth: false,\r\n        };\r\n    }\r\n\r\n\r\n/*     componentDidMount() {\r\n        this.setState({\r\n            auth: checkAuth() && !this.state.auth,\r\n        });\r\n    } */\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            auth: checkAuth() && !this.state.auth,\r\n        })\r\n    }\r\n    \r\n\r\n\r\n    render() {\r\n        const { component: Component, ...rest } = this.props;\r\n\r\n        return (\r\n            <Route\r\n                {...rest}\r\n                render={(props) => {\r\n                    return this.state.auth ? (\r\n                        <Component {...props} />\r\n                    ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: '/login', state:\r\n                                    { from: this.props.location }\r\n                            }}\r\n                        />\r\n                    )\r\n                }}\r\n\r\n            />\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\nimport paginationFactory, {\r\n    PaginationProvider,\r\n    PaginationListStandalone,\r\n    SizePerPageDropdownStandalone\r\n} from 'react-bootstrap-table2-paginator';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport { Row, Col, Button } from 'react-bootstrap';\r\nimport { request } from '../helper/helper';\r\nimport Loading from '../loading/loading';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { isUndefined } from 'util';\r\n\r\nconst { SearchBar } = Search;\r\n\r\nexport default class DataGrid extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            Loading: false,\r\n            rows: [],\r\n         };\r\n         if (this.props.showEditButton && !this.existColumn('Editar'))\r\n            this.props.columns.push(this.gerEditButton())\r\n\r\n        if (this.props.showDeleteButton && !this.existColumn('Eliminar'))\r\n            this.props.columns.push(this.getDeleteButton())\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    \r\n\r\n    getData(){\r\n        this.setState({ loading: true });\r\n        request\r\n            .get(this.props.url)\r\n            .then((response) => {\r\n                this.setState({rows: response.data,\r\n                loading: false});\r\n            })\r\n            .catch((err) => {\r\n                this.setState({loading: true});\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\n    existColumn(colText){\r\n        let col = this.props.columns.find((column) => column.text === colText)\r\n        return !isUndefined(col);\r\n    }\r\n\r\n    gerEditButton(){\r\n        return {\r\n            text: 'Editar',\r\n            formatter: (cell, row) =>{\r\n                /* console.log(row); */\r\n\r\n                return (\r\n                <Button onClick={() => this.props.onClickEditButton(row)}>\r\n                    <FontAwesomeIcon icon={faEdit}/>\r\n                </Button>);\r\n            }\r\n        }\r\n    }\r\n\r\n    getDeleteButton() {\r\n        return {\r\n            text: 'Eliminar',\r\n            formatter: (cell, row) => {\r\n                return (\r\n                    <Button onClick={() => this.props.onClickDeleteButton(row)}>\r\n                        <FontAwesomeIcon icon={faTrash}/>\r\n                    </Button>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    \r\n    render() { \r\n        const options = {\r\n            custom: true,\r\n            totalSize: this.state.rows.length,\r\n        };\r\n        return ( \r\n\r\n            <>\r\n            <Loading show={this.state.loading}/>\r\n            <ToolkitProvider\r\n                        keyField=\"tp\"\r\n                        data={this.state.rows}\r\n                        columns={this.props.columns}\r\n                        search\r\n                    >\r\n                        {(props) => (\r\n                            <>\r\n                                <PaginationProvider pagination={paginationFactory(options)}>\r\n                                    {({ paginationProps, paginationTableProps }) => (\r\n                                        <>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <SizePerPageDropdownStandalone {...paginationProps} />\r\n                                            </Col>\r\n                                            <Col>\r\n                                            <SearchBar {...props.searchProps} />\r\n                                            </Col>\r\n                                        </Row>\r\n                                            \r\n                                            \r\n                                            <BootstrapTable\r\n                                                keyField=\"bt\"\r\n                                                data={this.state.rows}\r\n                                                columns={this.props.columns}\r\n                                                {...paginationTableProps}\r\n                                                {...props.baseProps}\r\n                                            />\r\n                                            <PaginationListStandalone {...paginationProps} />\r\n                                        </>\r\n                                    )}\r\n                                </PaginationProvider>\r\n\r\n                            </>\r\n                        )}\r\n                    </ToolkitProvider>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\n ;","import React from 'react'\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nexport default class ConfirmationPromps extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n            title: '',\r\n            text: '',\r\n        }\r\n    }\r\n\r\n/*     componentWillReceiveProps(nextProps) {\r\n        if (nextProps.show) this.setState({show: true});\r\n    } */\r\n\r\n/*      componentDidUpdate(prevProps) {\r\n        if (prevProps.show !== this.props.show) {\r\n          this.setState({ \r\n            show: true,\r\n            title: prevProps.title,\r\n            text: prevProps.text,\r\n        });\r\n        }\r\n      }  */\r\n\r\ncomponentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            show: nextProps.show,\r\n            title: nextProps.title,\r\n            text: nextProps.text\r\n        })\r\n      } \r\n\r\n/*       componentDidUpdate(prevProps) {\r\n        if (prevProps.show) {this.setState({ show: true });\r\n        }\r\n      } */\r\n\r\n/*       componentDidUpdate() {\r\n        this.setState({\r\n            show: this.props.show,\r\n            title: this.props.title,\r\n            text: this.props.text,\r\n        });\r\n    } */\r\n\r\n    render() {\r\n        return (\r\n            <Modal \r\n                show={this.state.show}\r\n                centered\r\n                onHide={() => this.props.onCancel()}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{this.state.title}</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <p>{this.state.text}</p>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" \r\n                    onClick={() => this.props.onCancel()}\r\n                    >Cancelar</Button>\r\n                    <Button variant=\"primary\"\r\n                    onClick={() => this.props.onConfirm()}>Confirmar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport {  Modal } from 'react-bootstrap';\r\nimport './prompts.css'\r\nimport { isUndefined, isNull } from 'util';\r\n\r\nexport default class MessagePrompt extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false\r\n        }\r\n    }\r\n\r\n    /* componentWillReceiveProps(nextProps) {\r\n        if (nextProps.show) this.setState({show: true});\r\n    } */\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.show !== prevProps.show) {\r\n          this.setState({ show: true }, this.hideMessage());\r\n        }\r\n      }\r\n\r\n      hideMessage() {\r\n        setTimeout(() => {\r\n            this.setState({ show: false });\r\n        }, this.props.duration);\r\n      }\r\n\r\n      onExited(){\r\n        if(!isUndefined(this.props.onExited) && !isNull(this.props.onExited))\r\n            this.props.onExited();\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <Modal \r\n                id=\"message-prompt\"\r\n                centered\r\n                show={this.state.show}\r\n                onExited={() => this.onExited()}>\r\n                <Modal.Body>\r\n                {\r\n                    this.props.text\r\n                }\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { request } from \"../../helper/helper\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n/* import \"./empleados.css\"; */\r\nimport DataGrid from \"../../grid/grid\";\r\nimport ConfirmationPromps from \"../../prompts/confirmation\";\r\nimport Loading from \"../../loading/loading\";\r\nimport MessagePrompt from \"../../prompts/message\";\r\n\r\n\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n    PaginationProvider,\r\n    PaginationListStandalone,\r\n    SizePerPageDropdownStandalone,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        dataField: \"_id\",\r\n        text: \"Product ID\",\r\n        hidden: true,\r\n    },\r\n    {\r\n        dataField: \"nombre\",\r\n        text: \"Nombre\",\r\n    },\r\n    {\r\n        dataField: \"apellido_p\",\r\n        text: \"Primer apellido\",\r\n    },\r\n    {\r\n        dataField: \"apellido_m\",\r\n        text: \"Segundo apellido\",\r\n    },\r\n    {\r\n        dataField: \"telefono\",\r\n        text: \"Teléfono\",\r\n    },\r\n    {\r\n        dataField: \"mail\",\r\n        text: \"Email\",\r\n    },\r\n    {\r\n        dataField: \"direccion\",\r\n        text: \"Dirección\",\r\n    },\r\n];\r\n\r\nexport default class EmmpleadosBuscar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            idEmpleado: null,\r\n            confirmation: {\r\n                title: 'Eliminar empleado',\r\n                text: '¿Deseas eliminar el empleado?',\r\n                show: false,\r\n            },\r\n            message: {\r\n                text: '',\r\n                show: false,\r\n            }\r\n        };\r\n\r\n        this.onClickEditButton = this.onClickEditButton.bind(this);\r\n        this.onClickDeleteButton = this.onClickDeleteButton.bind(this);\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onConfirm = this.onConfirm.bind(this);\r\n    }\r\n\r\n    componentDidMount() { }\r\n\r\n    onClickEditButton(row) {\r\n        this.props.setIdEmpleado(row._id);\r\n        this.props.changeTab('editar');\r\n    }\r\n\r\n    onClickDeleteButton(row) {\r\n        this.setState({\r\n            idEmpleado: row._id,\r\n            confirmation: {\r\n                ...this.state.confirmation,\r\n                show: true,\r\n            }\r\n        })\r\n    }\r\n\r\n    onCancel() {\r\n        this.setState({\r\n            confirmation: {\r\n                ...this.state.confirmation,\r\n                show: false,\r\n            }\r\n        })\r\n    }\r\n\r\n    onConfirm() {\r\n        this.setState(\r\n            {\r\n                confirmation: {\r\n                    ...this.state.confirmation,\r\n                    show: false,\r\n                },\r\n            },\r\n            this.eliminarEmpleado())\r\n    }\r\n\r\n    eliminarEmpleado() {\r\n        this.setState({ loading: true })\r\n        request\r\n            .delete(`/empleados/${this.state.idEmpleado}`)\r\n            .then((response) => {\r\n                this.setState({\r\n                    loading: false,\r\n                    message: {\r\n                        text: response.data.msg,\r\n                        show: true,\r\n                    }\r\n                });\r\n                if(response.data.exito) window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                this.setState({ loading: false });\r\n            })\r\n    }\r\n\r\n    reloadPage() {\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 2500)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Container id=\"empleados-buscar-container\">\r\n\r\n                <ConfirmationPromps\r\n                    show={this.state.confirmation.show}\r\n                    title={this.state.confirmation.title}\r\n                    text={this.state.confirmation.text}\r\n                    onCancel={this.onCancel}\r\n                    onConfirm={this.onConfirm}\r\n                />\r\n\r\n                <MessagePrompt\r\n                    text={this.state.message.text}\r\n                    show={this.state.message.show}\r\n                    duration={2500}\r\n                    onExited={this.onExitedMessage}\r\n                />\r\n\r\n                <Loading show={this.state.Loading} />\r\n\r\n                <Row>\r\n                    <h1 style={{ marginTop: '20px' }}>Buscar Empleados</h1>\r\n                </Row>\r\n                <Row>\r\n                    <DataGrid\r\n                        url=\"/empleados\"\r\n                        columns={columns}\r\n                        showEditButton={true}\r\n                        showDeleteButton={true}\r\n                        onClickEditButton={this.onClickEditButton}\r\n                        onClickDeleteButton={this.onClickDeleteButton} />\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Button, Container, Form, Row } from 'react-bootstrap'\r\nimport { request } from '../../helper/helper';\r\nimport Loading from '../../loading/loading';\r\nimport MessagePrompt from '../../prompts/message';\r\n\r\nexport default class EmpleadosCrear extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: false,\r\n            message: {\r\n                text:\"\",\r\n                show: false,\r\n            },\r\n            loading: false,\r\n            empleado: {\r\n                nombre: \"\",\r\n                apellido_p: \"\",\r\n                apellido_m: \"\",\r\n                telefono: \"\",\r\n                mail: \"\",\r\n                direccion: \"\",\r\n            }\r\n        };\r\n        this.onExitedMessage = this.onExitedMessage.bind(this);\r\n    }\r\n\r\n    setValue(index, value){\r\n        this.setState({\r\n            empleado: {\r\n                ...this.state.empleado,\r\n                [index]: value,\r\n            }\r\n        })\r\n    }\r\n\r\n    guardarEmpleados(){\r\n        this.setState({ loading: true});\r\n        request\r\n            .post('/empleados', this.state.empleado)\r\n            .then((response) => {\r\n                if(response.data.exito){\r\n                    /* this.props.changeTab('buscar'); */\r\n                    this.setState({\r\n                        redirect: response.data.exito,\r\n                        message: {\r\n                            text: response.data.msg,\r\n                            show: true,\r\n                        }\r\n                    })\r\n                }\r\n                this.setState({ loading: false})\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                this.setState({ loading: true });\r\n            })\r\n    }\r\n\r\n    onExitedMessage() {\r\n        if (this.state.redirect) this.props.changeTab('buscar')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container id='empleados-crear-container'>\r\n\r\n                <MessagePrompt \r\n                    text={this.state.message.text}\r\n                    show={this.state.message.show}\r\n                    duration={2500}\r\n                    onExited={this.onExitedMessage}/>\r\n\r\n                <Loading show={this.state.loading}/>\r\n\r\n                <Row>\r\n                    <h1>Crear empleados</h1>\r\n                </Row>\r\n                <Row>\r\n                    <Form>\r\n                        <Form.Group className='mb-3' controlId=\"formBasic\">\r\n                            <Form.Label>Nombre</Form.Label>\r\n                            <Form.Control onChange={(e) => this.setValue('nombre', e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group className='mb-3' controlId=\"formBasic\">\r\n                            <Form.Label>Primer apellido</Form.Label>\r\n                            <Form.Control onChange={(e) => this.setValue('apellido_p', e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group className='mb-3' controlId=\"formBasic\">\r\n                            <Form.Label>Segundo apellido</Form.Label>\r\n                            <Form.Control onChange={(e) => this.setValue('apellido_m', e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group className='mb-3' controlId=\"formBasic\">\r\n                            <Form.Label>Teléfono</Form.Label>\r\n                            <Form.Control onChange={(e) => this.setValue('telefono', e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group className='mb-3' controlId=\"formBasic\">\r\n                            <Form.Label>Correo electrónico</Form.Label>\r\n                            <Form.Control onChange={(e) => this.setValue('mail', e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group className='mb-3' controlId=\"formBasic\">\r\n                            <Form.Label>Dirección</Form.Label>\r\n                            <Form.Control onChange={(e) => this.setValue('direccion', e.target.value)} />\r\n                        </Form.Group>\r\n\r\n                        {/* <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                        </Form.Group> */}\r\n                        <Button variant=\"primary\" onClick={() => console.log(this.guardarEmpleados())}>\r\n                            Guardar Empleado\r\n                        </Button>\r\n                    </Form>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Button, Container, Form, Row } from 'react-bootstrap'\r\nimport { request } from '../../helper/helper';\r\nimport Loading from '../../loading/loading';\r\nimport MessagePrompt from '../../prompts/message';\r\nimport ConfirmationPromps from '../../prompts/confirmation';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class EmpleadosEditar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idEmpleado: this.props.getIdEmpleado(),\r\n            redirect: false,\r\n            message: {\r\n                text:\"\",\r\n                show: false,\r\n            },\r\n            confirmation: {\r\n                title:\"Modificar empleado\",\r\n                text:\"¿Deseas modificar el empleado?\",\r\n                show:false,\r\n            },\r\n            loading: false,\r\n            empleado: {\r\n                nombre: \"\",\r\n                apellido_p: \"\",\r\n                apellido_m: \"\",\r\n                telefono: \"\",\r\n                mail: \"\",\r\n                direccion: \"\",\r\n            }\r\n        };\r\n        this.onExitedMessage = this.onExitedMessage.bind(this);\r\n        this.onCancel= this.onCancel.bind(this);\r\n        this.onConfirm = this.onConfirm.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getEmpleado();\r\n    }\r\n\r\n    getEmpleado() {\r\n        this.setState({ loading: true});\r\n        request\r\n            .get(`/empleados/${this.state.idEmpleado}`)\r\n            .then((response) =>{\r\n                console.log(response);\r\n                this.setState({\r\n                    empleado: response.data,\r\n                    loading: false});\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                this.setState({ loading: false});\r\n            })\r\n    }\r\n\r\n    setValue(index, value){\r\n        this.setState({\r\n            empleado: {\r\n                ...this.state.empleado,\r\n                [index]: value,\r\n            }\r\n        })\r\n    }\r\n\r\n    guardarEmpleados(){\r\n        this.setState({ loading: true});\r\n        request\r\n            .put(`/empleados/${this.state.idEmpleado}`, this.state.empleado)\r\n            .then((response) => {\r\n                if(response.data.exito){\r\n                    /* this.props.changeTab('buscar'); */\r\n                    this.setState({\r\n                        redirect: response.data.exito,\r\n                        message: {\r\n                            text: response.data.msg,\r\n                            show: true,\r\n                        }\r\n                    })\r\n                }\r\n                this.setState({ loading: false})\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                this.setState({ loading: true });\r\n            })\r\n    }\r\n\r\n    onExitedMessage() {\r\n        if (this.state.redirect) this.props.changeTab('buscar')\r\n    }\r\n\r\n    onCancel(){\r\n        this.setState({\r\n            confirmation: {\r\n                ...this.state.confirmation,\r\n                show: false,\r\n            }\r\n        })\r\n    }\r\n\r\n    onConfirm(){\r\n        this.setState(\r\n            {\r\n            confirmation: {\r\n                ...this.state.confirmation,\r\n                show: false,\r\n            },\r\n        },\r\n        this.guardarEmpleados())\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container id='empleados-crear-container'>\r\n\r\n                <MessagePrompt \r\n                    text={this.state.message.text}\r\n                    show={this.state.message.show}\r\n                    duration={2500}\r\n                    onExited={this.onExitedMessage}/>\r\n\r\n                <ConfirmationPromps\r\n                    show={this.state.confirmation.show}\r\n                    title={this.state.confirmation.title}\r\n                    text={this.state.confirmation.text}\r\n                    onCancel={this.onCancel}\r\n                    onConfirm={this.onConfirm}\r\n                />\r\n\r\n                \r\n\r\n                <Loading show={this.state.loading}/>\r\n\r\n                <Row>\r\n                    <h1>Editar empleados</h1>\r\n                </Row>\r\n                <Row>\r\n                    <Form>\r\n                        <Form.Group className='mb-3' controlId=\"formBasic\">\r\n                            <Form.Label>Nombre</Form.Label>\r\n                            <Form.Control \r\n                                value={this.state.empleado.nombre}\r\n                                onChange={(e) => this.setValue('nombre', e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group className='mb-3' controlId=\"formBasic\">\r\n                            <Form.Label>Primer apellido</Form.Label>\r\n                            <Form.Control \r\n                                value={this.state.empleado.apellido_p}\r\n                                onChange={(e) => this.setValue('apellido_p', e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group className='mb-3' controlId=\"formBasic\">\r\n                            <Form.Label>Segundo apellido</Form.Label>\r\n                            <Form.Control \r\n                                value={this.state.empleado.apellido_m}\r\n                                onChange={(e) => this.setValue('apellido_m', e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group className='mb-3' controlId=\"formBasic\">\r\n                            <Form.Label>Teléfono</Form.Label>\r\n                            <Form.Control \r\n                                value={this.state.empleado.telefono}\r\n                                onChange={(e) => this.setValue('telefono', e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group className='mb-3' controlId=\"formBasic\">\r\n                            <Form.Label>Correo electrónico</Form.Label>\r\n                            <Form.Control \r\n                                value={this.state.empleado.mail}\r\n                                onChange={(e) => this.setValue('mail', e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group className='mb-3' controlId=\"formBasic\">\r\n                            <Form.Label>Dirección</Form.Label>\r\n                            <Form.Control \r\n                                value={this.state.empleado.direccion}\r\n                                onChange={(e) => this.setValue('direccion', e.target.value)} />\r\n                        </Form.Group>\r\n\r\n                        {/* <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                        </Form.Group> */}\r\n                        <Button \r\n                            variant=\"primary\"\r\n                            onClick={() => \r\n                                this.setState({\r\n                                    confirmation: {...this.state.confirmation, show: true}\r\n                                })}>\r\n                            Guardar Empleado\r\n                        </Button>\r\n                    </Form>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Container, Nav, Row } from 'react-bootstrap';\r\nimport EmmpleadosBuscar from './crud/buscar';\r\nimport EmpleadosCrear from './crud/crear';\r\nimport './empleados.css'\r\nimport EmpleadosEditar from './crud/editar';\r\n\r\nexport default class Empleados extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currenTab: \"buscar\",\r\n            _id: null,\r\n        };\r\n        this.changeTab = this.changeTab.bind(this);\r\n        this.setIdEmpleado = this.setIdEmpleado.bind(this);\r\n        this.getIdEmpleado = this.getIdEmpleado.bind(this);\r\n    }\r\n\r\n    changeTab(tab){\r\n        this.setState({currenTab: tab});\r\n    }\r\n\r\n    setIdEmpleado(id){\r\n        this.setState({_id: id});\r\n    }\r\n\r\n    getIdEmpleado(){\r\n        return this.state._id;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container id='empleados-container'>\r\n                <Row>\r\n                    <Nav \r\n                        fill\r\n                        variant=\"tabs\"\r\n                        defaultActiveKey=\"buscar\"\r\n                        onSelect={(eventKey) => this.setState({currenTab: eventKey})}>\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"buscar\">Buscar</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"crear\">Crear</Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Row>\r\n                <Row>\r\n                    {this.state.currenTab === 'buscar' ? (\r\n                    <EmmpleadosBuscar \r\n                        changeTab={this.changeTab}\r\n                        setIdEmpleado={this.setIdEmpleado}/>\r\n                    ) : this.state.currenTab === \"crear\" ? (\r\n                    <EmpleadosCrear changeTab={this.changeTab}/>\r\n                    ): (\r\n                        <EmpleadosEditar\r\n                            changeTab={this.changeTab}\r\n                            getIdEmpleado={this.getIdEmpleado}\r\n                        />\r\n                    )}\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport PrivateRoute from '../auth/privateroute'\r\n\r\nimport Login from \"../login/login\"\r\n/* import EmmpleadosBuscar from '../empleados/crud/buscar'  */\r\nimport Empleados from '../empleados'\r\nexport default function AppRouter(){\r\n    return(\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path={[\"/\", \"/login\"]} component={Login}/>\r\n                <PrivateRoute exact path=\"/empleados\" component={Empleados} />\r\n                <Route\r\n                    path={'*'}\r\n                    component={() =>( \r\n                        <h1 style={{marginTop: 300}}>\r\n                            400\r\n                            <br/>\r\n                            Página no encontrada manito\r\n                        </h1>\r\n                    )}\r\n                />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\n/* function Home () {\r\n    return(\r\n            <h2 style={{ marginTop: 300}}> Home, bienvenidooo </h2>\r\n    )\r\n} */\r\n \r\n","import React from 'react'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container } from 'react-bootstrap';\nimport Login from './components/login/login';\nimport Menu from './components/navbar/navbar';\nimport AppRouter from './components/router/router';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n        <Menu/>\n        <AppRouter/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}