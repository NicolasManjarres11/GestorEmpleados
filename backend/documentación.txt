En la carpeta bin, en el archivo www, está parametrizada la conexión al servidor. Se configuró para que el servidor cargara o ya sea en un puerto dado automáticamente o por el puerto 3030.

Se crea carpeta config y dentro creamos el archivo database.js, para configurar la conexión a la base de datos, la cual está en línea

Se crea carpeta models, donde estarán los modelos de tablas de la base de datos, se empezó con la tabla de empleados, creando un schema y exportando este mismo por medio de la función mongoose.model, para guardar la tabla empleados

Se crea carpeta controllers, donde definiremos las funciones para enviar datos a la base de datos, ya sea para crear, guardar, modificar o eliminar algún datos

Se crea archivo de empleados.router.js en routes, para definir la primera ruta del proyecto, la importamos en app.js y procedemos a realizar pruebas en postman

en Postman, probamos con el metodo POST si se guardan los datos, colocando la ruta de empleados y en la parte de Body, colocando algunos datos de prueba como si estvieramos guardando algún empleado

Luego de las pruebas, vamos a crear otras funciones dentro del controller, las cuales son buscar en general y buscar un único dato. En las rutas definimos primero el método a utilizar (POST, GET, UPDATE, DELETE), luego aclaramos en qué ruta se hará y por último llamamos la función a utilizar

Hacemos prueba en postman, colocando la dirección del servidor con la ruta de empleados, seleccionamos el método GET, envíamos la petición y nos traerá en JSON la información solicitada, en este caso, los datos de la tabla empleados. Esto con el método find

Luego hacemos la prueba de llamar un único dato, para eso creamos la funció finOne, que utilizará el método con el mismo nombre sobre el modelo Empleado, aclaramos que se buscará por id y se aclara en las rutas


Ahora se crea la función para actualizar datos, en este caso se llama el método findByIdAndUpdate, lo que hace es buscar por id y actualizar los datos del empleado que maneje ese ID, se agrega en las rutas con el método put, se prueba en postman, con el método put, en el link se coloca la dirección más el id, en el body colocamos los campos de la base de datos y los datos a actualizar

Por último se crea la función de borrar que funciona prácticamente igual que la función de update, solo que remueve el dato según el id especificado
